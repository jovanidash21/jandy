@import "../../../bower_components/bootstrap-sass/assets/stylesheets/bootstrap/mixins";
@import "variables";

/* CSS3 Prefixes
 * @param {*} $property - Property
 * @param {*} $value - Value
 */
@mixin css3-prefix($property, $value) {
  #{$property}: #{$value};
  -o-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -khtml-#{$property}: #{$value};
  -webkit-#{$property}: #{$value};
}

/* Animation
 * @param {name duration timing-function delay iteration-count direction fill-mode play-state} $value - Value
 */
@mixin animation($value) {
  @include css3-prefix('animation', $value);
}
/* Background Linear Gradient
 * @param {direction|corner|angle} $angle - Angle
 * @param {color length|%} $colorStop1 - Color Stop 1
 * @param {color length|%} $colorStop2 - Color Stop 2
 */
@mixin background-linear-gradient($angle, $colorStop1, $colorStop2) {
  background-color: $colorStop1; // For browsers that do not support gradients
  background-image: linear-gradient($angle, $colorStop1, $colorStop2);
  background-image: -o-linear-gradient($angle, $colorStop1, $colorStop2);
  background-image: -ms-linear-gradient($angle, $colorStop1, $colorStop2);
  background-image: -moz-linear-gradient($angle, $colorStop1, $colorStop2);
  background-image: -webkit-linear-gradient($angle, $colorStop1, $colorStop2);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorStr=#{$colorStop1}, endColorStr=#{$colorStop2}); // For IE8 and earlier versions
}
/* Background Color Opacity
 * @param {color} $color - Color
 * @param {opacity} $opacity - Opacity
 */
@mixin background-color-opacity($color, $opacity) {
  background-color: rgba($color, $opacity);
}
/* Background Size
 * @param {auto|length|cover|contain|initial|inherit} $value - Value
 */
@mixin background-size($value) {
  @include css3-prefix('background-size', $value);
}
/* Border Bottom Left Radius
 * @param {length|% [length|%]|initial|inherit} $value - Value
 */
@mixin border-bottom-left-radius($value) {
  @include css3-prefix('border-bottom-left-radius', $value);
}
/* Border Bottom Right Radius
 * @param {length|% [length|%]|initial|inherit} $value - Value
 */
@mixin border-bottom-right-radius($value) {
  @include css3-prefix('border-bottom-right-radius', $value);
}
/* Border Top Left Radius
 * @param {length|% [length|%]|initial|inherit} $value - Value
 */
@mixin border-top-left-radius($value) {
  @include css3-prefix('border-top-left-radius', $value);
}
/* Border Top Right Radius
 * @param {length|% [length|%]|initial|inherit} $value - Value
 */
@mixin border-top-right-radius($value) {
  @include css3-prefix('border-top-right-radius', $value);
}
/* Box Shadow
 * @param {1-4 length|% / 1-4 length|%|initial|inherit} $value - Value
 */
@mixin border-radius($value) {
  @include css3-prefix('border-radius', $value);
}
/* Box Shadow
 * @param {none|h-shadow v-shadow blur spread color |inset|initial|inherit} $value - Value
 */
@mixin box-shadow($value) {
  @include css3-prefix('box-shadow', $value);
}
/* Box Sizing
 * @param {content-box|border-box|initial|inherit} $value - Value
 */
@mixin box-sizing($value) {
  @include css3-prefix('box-sizing', $value);
}
/* Color Opacity
 * @param {color} $color - Color
 * @param {opacity} $opacity - Opacity
 */
@mixin color-opacity($color, $opacity) {
  color: rgba($color, $opacity);
}
/* Display Flex
 * @param {flex|inline-flex} $value - Value
 */
@mixin display-flex($value) {
  display: #{$value};
  display: -webkit-#{$value};
}
/* Font Size
 * @param {number} $value - Value
 */
@mixin font-size($value) {
  font-size: $value * 1px;
  font-size: $value * 0.1rem;
}
/* Grayscale
 * @param {percent} $value - Value
 */
@mixin grayscale($value) {
  @include css3-prefix('filter', grayscale($value));
}
/* Keyframes
 * @param {animation-name} $animationName - Animation Name
 */
@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-ms-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}
/* Opacity
 * @param {number|initial|inherit} $value - Value
 */
@mixin opacity($value) {
  @include css3-prefix('opacity', $value);
  filter: alpha(opacity=#{$value * 100}); // For IE8 and earlier versions
}
/* Placeholder
 * @param {}
 */
@mixin placeholder() {
  &::-webkit-input-placeholder { // For Chrome / Opera / Safari
    @content;
  }
  &::-moz-placeholder { // For Firefox 19 and up
    @content;
  }
  &:-moz-placeholder { // For Firefox 18 and earlier versions
    @content;
  }
  &:-ms-input-placeholder { // For IE10 and up
    @content;
  }
}
/* Text Shadow
 * @param {h-shadow v-shadow blur-radius color|none|initial|inherit} $value - Value
 */
@mixin text-shadow($value) {
  text-shadow: $value;
}
/* Transform
 * @param {none|transform-functions|initial|inherit} $value - Value
 */
@mixin transform($value) {
  @include css3-prefix('transform', $value);
}
/* Transition
 * @param {css-property duration timing-function|none|initial|inherit} $value - Value
 */
@mixin transition($value) {
  @include css3-prefix('transition', $value);
}
/* User Select
 * @param {auto|none|text|all} $value - Value
 */
@mixin user-select($value) {
  @include css3-prefix('user-select', $value);
}